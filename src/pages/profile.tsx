import Head from 'next/head'
import profileStyle from '@/styles/Profile.module.css'
import {Button} from "@chakra-ui/button";
import {useForm} from "react-hook-form";
import {inter} from "@/pages/_app";
import {palette} from "@/theme/palette";
import {useRouter} from "next/router";
import {authProvider} from "@/services/providers/auth-provider";
import {UpdateUser} from "@/services/types";
import { useAuthStore } from '@/services/stores/auth-store';
import {Text} from "@chakra-ui/react";
import {Avatar} from "@chakra-ui/avatar";
import {TiArrowBack} from "react-icons/ti";

export default function Profile() {
    const { user } = useAuthStore();

    const formDefaultValues: UpdateUser = {
        name: '',
        oldPassword: '',
        password: '',
        bio: ''
    };

    const { register, handleSubmit, formState } = useForm<UpdateUser>({
        defaultValues: formDefaultValues
    });
    const { setUser } = useAuthStore();
    const router = useRouter();

    const onSubmit = (infos: UpdateUser) => {
        if (user && user.token) {
            const login = async () => {
                const {data, check} = await authProvider.updateUser(user?.token, infos);
                if (check) {
                    setUser(data);
                } else {
                    console.error('Failed to update User');
                }
            };
            login();
        }
    };

    return (
        <>
            <Head>
                <title>Profile</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={`${profileStyle.main} ${inter.className}`}>
                <Button style={{ marginBottom: '30px', backgroundColor: palette.primaryPurple }} variant='solid' onClick={() => router.push('/chat')}>
                    <TiArrowBack/>
                    <Text fontSize='l' color='white' style={{ marginLeft: '20px' }}>Message</Text>
                </Button>
                <div className={profileStyle.container}>
                    <form className={profileStyle.form}>
                        <div className={profileStyle.formContainer}>
                            <div className="relative z-0 w-3/5 mx-auto mb-7 group">
                                <input type="email" id="floating_email"
                                       className="block py-2.5 px-0 w-full text-sm text-gray-400 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-purple-600 focus:outline-none focus:ring-0 focus:border-purple-600 peer"
                                       placeholder=" " required {...register("name")}/>
                                <label htmlFor="floating_email"
                                       className="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-purple-600 peer-focus:dark:text-purple-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Nom
                                </label>
                            </div>
                            <div className="relative z-0 w-3/5 mx-auto mb-7 group">
                                <input type="password" id="floating_password"
                                       className="block py-2.5 px-0 w-full text-sm text-gray-400 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-purple-600 focus:outline-none focus:ring-0 focus:border-purple-600 peer"
                                       placeholder=" " required {...register("oldPassword")}/>
                                <label htmlFor="floating_password"
                                       className="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-purple-600 peer-focus:dark:text-purple-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Ancien mot de passe</label>
                            </div>
                            <div className="relative z-0 w-3/5 mx-auto mb-7 group">
                                <input type="password" id="floating_email"
                                       className="block py-2.5 px-0 w-full text-sm text-gray-400 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-purple-600 focus:outline-none focus:ring-0 focus:border-purple-600 peer"
                                       placeholder=" " required {...register("password")}/>
                                <label htmlFor="floating_email"
                                       className="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-purple-600 peer-focus:dark:text-purple-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Nouveau mot de passe
                                </label>
                            </div>
                            <div className="relative z-0 w-3/5 mx-auto mb-7 group">
                                <input type="email" id="floating_email"
                                       className="block py-2.5 px-0 w-full text-sm text-gray-400 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-purple-600 focus:outline-none focus:ring-0 focus:border-purple-600 peer"
                                       placeholder=" " required {...register("bio")}/>
                                <label htmlFor="floating_email"
                                       className="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-purple-600 peer-focus:dark:text-purple-600 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">Biographie
                                </label>
                            </div>
                            <div className={profileStyle.submit}>
                                <Button
                                    mt={1}
                                    colorScheme='teal'
                                    type='submit'
                                    isLoading={formState.isSubmitting}
                                    onClick={handleSubmit(onSubmit)}
                                    style={{ backgroundColor: palette.primaryPurple, fontSize: '14px', color: 'white', marginBlock: 'auto', width: '40%', borderRadius: '50px', marginLeft: '30%', boxShadow: "0 0 7px 7px rgba(170, 119, 255, 0.5)"}}
                                >
                                    Envoyer
                                </Button>
                            </div>
                        </div>
                    </form>
                    <div className={profileStyle.presentation}>
                        <div style={{width: '100%', display: 'flex', justifyContent: 'center', marginBottom: '20px'}}>
                            <Avatar bg='teal.500' size="2xl"/>
                        </div>
                        <Text style={{ marginBottom: '10px' }} fontSize='2xl' color='white'>{user?.name}</Text>
                        <Text fontSize='2xl' color='white'>{user?.email}</Text>
                    </div>
                </div>
            </main>
        </>
    )
}
